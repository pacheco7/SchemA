<?xml version="1.0" encoding="utf-8"?>
<CLAS CLSNAME="ZCL_SCHEMA_MAIN" VERSION="1" LANGU="D" DESCRIPT="schema.org: Main class" CATEGORY="00" EXPOSURE="2" STATE="1" RELEASE="0" CLSFINAL="X" CLSCCINCL="X" FIXPT="X" UNICODE="X" CLSBCCAT="00" WITH_UNIT_TESTS="X" DURATION_TYPE="0 " RISK_LEVEL="0 " ZSAPLINK_PLUGIN_MAJOR_VERSION="0 " ZSAPLINK_PLUGIN_MINOR_VERSION="1 " ZSAPLINK_PLUGIN_BUILD_VERSION="0 " ZSAPLINK_PLUGIN_INFO1="ZSAPLINK_CLASS is part of the main ZSAPLINK project --&gt; This plugin found there instead of ZSAPLINK_PLUGINS projects" ZSAPLINK_PLUGIN_INFO2="SAPLINK homepage: https://www.assembla.com/spaces/saplink/wiki" ZSAPLINK_PLUGIN_INFO3="Download from https://www.assembla.com/code/saplink/subversion/nodes" ZSAPLINK_PLUGIN_INFO4="and navigate to:  trunk -&gt; core -&gt; ZSAPLINK -&gt; CLAS -&gt; ZSAPLINK_CLASS.slnk">
 <localImplementation>*&quot;* use this source file for the definition and implementation of
*&quot;* local helper classes, interface definitions and type
*&quot;* declarations</localImplementation>
 <localTypes>*&quot;* use this source file for any type of declarations (class
*&quot;* definitions, interfaces or type declarations) you need for
*&quot;* components in the private section</localTypes>
 <localMacros>*&quot;* use this source file for any macro definitions you need
*&quot;* in the implementation part of the class</localMacros>
 <localTestClasses>*&quot;* use this source file for your ABAP unit test classes</localTestClasses>
 <method CLSNAME="ZCL_SCHEMA_MAIN" CMPNAME="CREATE" VERSION="1" LANGU="D" EXPOSURE="2" STATE="1" EDITORDER="1 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="1" BCMTDCAT="00" BCMTDSYN="0">
  <parameter CLSNAME="ZCL_SCHEMA_MAIN" CMPNAME="CREATE" SCONAME="I_JSON" VERSION="1" LANGU="D" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="STRING"/>
  <parameter CLSNAME="ZCL_SCHEMA_MAIN" CMPNAME="CREATE" SCONAME="R_OBJECT" VERSION="1" LANGU="D" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " PARDECLTYP="3" PARPASSTYP="0" TYPTYPE="3" TYPE="ZCL_SCHEMA_THING"/>
  <source>METHOD create.

    DATA(json_doc) = zcl_json_document=&gt;create_with_json( i_json ).
    DATA(types_doc) = zcl_json_document=&gt;create_with_json( json_doc-&gt;get_value( &apos;@type&apos; ) ).

    WHILE types_doc-&gt;get_next( ) IS NOT INITIAL.

      DATA(type) = to_upper( types_doc-&gt;get_json( ) ).
      CHECK type &lt;&gt; &apos;THING&apos;.

      &quot;*--- try to create an object with this type ---*
      DATA(object_type) = |ZCL_SCHEMA_{ type }|.

      TRY.
          CREATE OBJECT r_object TYPE (object_type)
            EXPORTING i_json = i_json.
        CATCH cx_sy_create_object_error.
          CONTINUE.
      ENDTRY.

      EXIT.    &quot;a class with this type found
    ENDWHILE.

    &quot;*--- no class with this type found -&gt; create a THING ---*
    IF r_object IS NOT BOUND.
      r_object = NEW zcl_schema_thing( i_json ).
    ENDIF.

  ENDMETHOD.</source>
 </method>
</CLAS>
