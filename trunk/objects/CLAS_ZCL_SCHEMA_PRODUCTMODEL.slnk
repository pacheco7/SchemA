<?xml version="1.0" encoding="utf-8"?>
<CLAS CLSNAME="ZCL_SCHEMA_PRODUCTMODEL" VERSION="1" LANGU="D" DESCRIPT="schema.org: PRODUCTMODEL A datasheet or .." CATEGORY="00" EXPOSURE="2" STATE="1" RELEASE="0" CLSCCINCL="X" FIXPT="X" UNICODE="X" CLSBCCAT="00" WITH_UNIT_TESTS="X" DURATION_TYPE="0 " RISK_LEVEL="0 " ZSAPLINK_PLUGIN_MAJOR_VERSION="0 " ZSAPLINK_PLUGIN_MINOR_VERSION="1 " ZSAPLINK_PLUGIN_BUILD_VERSION="0 " ZSAPLINK_PLUGIN_INFO1="ZSAPLINK_CLASS is part of the main ZSAPLINK project --&gt; This plugin found there instead of ZSAPLINK_PLUGINS projects" ZSAPLINK_PLUGIN_INFO2="SAPLINK homepage: https://www.assembla.com/spaces/saplink/wiki" ZSAPLINK_PLUGIN_INFO3="Download from https://www.assembla.com/code/saplink/subversion/nodes" ZSAPLINK_PLUGIN_INFO4="and navigate to:  trunk -&gt; core -&gt; ZSAPLINK -&gt; CLAS -&gt; ZSAPLINK_CLASS.slnk" REFCLSNAME="ZCL_SCHEMA_PRODUCT">
 <friends CLSNAME="ZCL_SCHEMA_PRODUCTMODEL" REFCLSNAME="ZCL_SCHEMA_THING" FRIENDTYPE="0" VERSION="1" STATE="1"/>
 <localImplementation>*&quot;* use this source file for the definition and implementation of
*&quot;* local helper classes, interface definitions and type
*&quot;* declarations</localImplementation>
 <localTypes>*&quot;* use this source file for any type of declarations (class
*&quot;* definitions, interfaces or type declarations) you need for
*&quot;* components in the private section</localTypes>
 <localMacros>*&quot;* use this source file for any macro definitions you need
*&quot;* in the implementation part of the class</localMacros>
 <localTestClasses>*&quot;* use this source file for your ABAP unit test classes</localTestClasses>
 <attribute CLSNAME="ZCL_SCHEMA_PRODUCTMODEL" CMPNAME="IS_VARIANT_OF" VERSION="1" LANGU="D" EXPOSURE="0" STATE="1" EDITORDER="2 " ATTDECLTYP="0" ATTEXPVIRT="0" TYPTYPE="3" TYPE="ZCL_SCHEMA_PRODUCTMODEL" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
 <attribute CLSNAME="ZCL_SCHEMA_PRODUCTMODEL" CMPNAME="PREDECESSOR_OF" VERSION="1" LANGU="D" EXPOSURE="0" STATE="1" EDITORDER="3 " ATTDECLTYP="0" ATTEXPVIRT="0" TYPTYPE="3" TYPE="ZCL_SCHEMA_PRODUCTMODEL" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
 <attribute CLSNAME="ZCL_SCHEMA_PRODUCTMODEL" CMPNAME="SUCCESSOR_OF" VERSION="1" LANGU="D" EXPOSURE="0" STATE="1" EDITORDER="4 " ATTDECLTYP="0" ATTEXPVIRT="0" TYPTYPE="3" TYPE="ZCL_SCHEMA_PRODUCTMODEL" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
 <attribute CLSNAME="ZCL_SCHEMA_PRODUCTMODEL" CMPNAME="TYPE" VERSION="1" LANGU="D" EXPOSURE="0" STATE="1" EDITORDER="1 " ATTDECLTYP="1" ATTVALUE="&apos;ProductModel&apos;" ATTEXPVIRT="0" TYPTYPE="1" TYPE="STRING" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
 <inheritance CLSNAME="ZCL_SCHEMA_PRODUCTMODEL" REFCLSNAME="ZCL_SCHEMA_PRODUCT" VERSION="1" STATE="1">
  <redefinition CLSNAME="ZCL_SCHEMA_PRODUCTMODEL" REFCLSNAME="ZCL_SCHEMA_PRODUCT" VERSION="1" MTDNAME="APPEND_ATTRIBUTES" EXPOSURE="0"/>
 </inheritance>
 <method CLSNAME="ZCL_SCHEMA_PRODUCT" CMPNAME="APPEND_ATTRIBUTES" VERSION="0" EXPOSURE="0" STATE="0" EDITORDER="0 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
  <source>METHOD append_attributes.
    INCLUDE z_schema_attributes_super.
  ENDMETHOD.</source>
 </method>
 <method CLSNAME="ZCL_SCHEMA_PRODUCTMODEL" CMPNAME="CONSTRUCTOR" VERSION="1" LANGU="D" EXPOSURE="2" STATE="1" EDITORDER="1 " DISPID="0 " MTDTYPE="2" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
  <parameter CLSNAME="ZCL_SCHEMA_PRODUCTMODEL" CMPNAME="CONSTRUCTOR" SCONAME="I_JSON" VERSION="1" LANGU="D" CMPTYPE="1" MTDTYPE="2" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="STRING" PAROPTIONL="X"/>
  <source>METHOD constructor.
    INCLUDE z_schema_constructor_super.
  ENDMETHOD.</source>
 </method>
 <method CLSNAME="ZCL_SCHEMA_PRODUCTMODEL" CMPNAME="GET_IS_VARIANT_OF" VERSION="1" LANGU="D" EXPOSURE="2" STATE="1" EDITORDER="2 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
  <parameter CLSNAME="ZCL_SCHEMA_PRODUCTMODEL" CMPNAME="GET_IS_VARIANT_OF" SCONAME="R_RESULT" VERSION="1" LANGU="D" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="3" PARPASSTYP="0" TYPTYPE="3" TYPE="ZCL_SCHEMA_PRODUCTMODEL"/>
  <source>METHOD get_is_variant_of.
    r_result = me-&gt;is_variant_of.
  ENDMETHOD.</source>
 </method>
 <method CLSNAME="ZCL_SCHEMA_PRODUCTMODEL" CMPNAME="GET_PREDECESSOR_OF" VERSION="1" LANGU="D" EXPOSURE="2" STATE="1" EDITORDER="5 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
  <parameter CLSNAME="ZCL_SCHEMA_PRODUCTMODEL" CMPNAME="GET_PREDECESSOR_OF" SCONAME="R_RESULT" VERSION="1" LANGU="D" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="3" PARPASSTYP="0" TYPTYPE="3" TYPE="ZCL_SCHEMA_PRODUCTMODEL"/>
  <source>METHOD get_predecessor_of.
    r_result = me-&gt;predecessor_of.
  ENDMETHOD.</source>
 </method>
 <method CLSNAME="ZCL_SCHEMA_PRODUCTMODEL" CMPNAME="GET_SUCCESSOR_OF" VERSION="1" LANGU="D" EXPOSURE="2" STATE="1" EDITORDER="8 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
  <parameter CLSNAME="ZCL_SCHEMA_PRODUCTMODEL" CMPNAME="GET_SUCCESSOR_OF" SCONAME="R_RESULT" VERSION="1" LANGU="D" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="3" PARPASSTYP="0" TYPTYPE="3" TYPE="ZCL_SCHEMA_PRODUCTMODEL"/>
  <source>METHOD get_successor_of.
    r_result = me-&gt;successor_of.
  ENDMETHOD.</source>
 </method>
 <method CLSNAME="ZCL_SCHEMA_PRODUCTMODEL" CMPNAME="SET_IS_VARIANT_OF" VERSION="1" LANGU="D" EXPOSURE="2" STATE="1" EDITORDER="3 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
  <parameter CLSNAME="ZCL_SCHEMA_PRODUCTMODEL" CMPNAME="SET_IS_VARIANT_OF" SCONAME="I_IS_VARIANT_OF" VERSION="1" LANGU="D" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="3" TYPE="ZCL_SCHEMA_PRODUCTMODEL"/>
  <source>METHOD set_is_variant_of.
    me-&gt;is_variant_of = i_is_variant_of.
  ENDMETHOD.</source>
 </method>
 <method CLSNAME="ZCL_SCHEMA_PRODUCTMODEL" CMPNAME="SET_IS_VARIANT_OF_JSON" VERSION="1" LANGU="D" EXPOSURE="2" STATE="1" EDITORDER="4 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
  <parameter CLSNAME="ZCL_SCHEMA_PRODUCTMODEL" CMPNAME="SET_IS_VARIANT_OF_JSON" SCONAME="I_IS_VARIANT_OF" VERSION="1" LANGU="D" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="STRING"/>
  <source>METHOD set_is_variant_of_json.
    me-&gt;is_variant_of = NEW #( i_is_variant_of ).
  ENDMETHOD.</source>
 </method>
 <method CLSNAME="ZCL_SCHEMA_PRODUCTMODEL" CMPNAME="SET_PREDECESSOR_OF" VERSION="1" LANGU="D" EXPOSURE="2" STATE="1" EDITORDER="6 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
  <parameter CLSNAME="ZCL_SCHEMA_PRODUCTMODEL" CMPNAME="SET_PREDECESSOR_OF" SCONAME="I_PREDECESSOR_OF" VERSION="1" LANGU="D" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="3" TYPE="ZCL_SCHEMA_PRODUCTMODEL"/>
  <source>METHOD set_predecessor_of.
    me-&gt;predecessor_of = i_predecessor_of.
  ENDMETHOD.</source>
 </method>
 <method CLSNAME="ZCL_SCHEMA_PRODUCTMODEL" CMPNAME="SET_PREDECESSOR_OF_JSON" VERSION="1" LANGU="D" EXPOSURE="2" STATE="1" EDITORDER="7 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
  <parameter CLSNAME="ZCL_SCHEMA_PRODUCTMODEL" CMPNAME="SET_PREDECESSOR_OF_JSON" SCONAME="I_PREDECESSOR_OF" VERSION="1" LANGU="D" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="STRING"/>
  <source>METHOD set_predecessor_of_json.
    me-&gt;predecessor_of = NEW #( i_predecessor_of ).
  ENDMETHOD.</source>
 </method>
 <method CLSNAME="ZCL_SCHEMA_PRODUCTMODEL" CMPNAME="SET_SUCCESSOR_OF" VERSION="1" LANGU="D" EXPOSURE="2" STATE="1" EDITORDER="9 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
  <parameter CLSNAME="ZCL_SCHEMA_PRODUCTMODEL" CMPNAME="SET_SUCCESSOR_OF" SCONAME="I_SUCCESSOR_OF" VERSION="1" LANGU="D" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="3" TYPE="ZCL_SCHEMA_PRODUCTMODEL"/>
  <source>METHOD set_successor_of.
    me-&gt;successor_of = i_successor_of.
  ENDMETHOD.</source>
 </method>
 <method CLSNAME="ZCL_SCHEMA_PRODUCTMODEL" CMPNAME="SET_SUCCESSOR_OF_JSON" VERSION="1" LANGU="D" EXPOSURE="2" STATE="1" EDITORDER="10 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
  <parameter CLSNAME="ZCL_SCHEMA_PRODUCTMODEL" CMPNAME="SET_SUCCESSOR_OF_JSON" SCONAME="I_SUCCESSOR_OF" VERSION="1" LANGU="D" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="STRING"/>
  <source>METHOD set_successor_of_json.
    me-&gt;successor_of = NEW #( i_successor_of ).
  ENDMETHOD.</source>
 </method>
</CLAS>
